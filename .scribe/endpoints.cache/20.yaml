## Autogenerated by Scribe. DO NOT MODIFY.

name: Experience
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/portal/experiences
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Experiences'
      description: 'Endpoint lists available experiences.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      term:
        name: term
        description: 'Filter by term.'
        required: false
        example: null
        type: string
        custom: []
      order_by:
        name: order_by
        description: 'Specifying method of ordering query. Multiple values can be provided by listing items separated by comma.'
        required: false
        example: 'name:asc,created_at:asc'
        type: string
        custom: []
      drafted:
        name: drafted
        description: 'Specifying how to interact with drafted items.'
        required: false
        example: with
        type: string
        custom: []
      deleted:
        name: deleted
        description: 'Specifying how to interact with soft-deleted items.'
        required: false
        example: with
        type: string
        custom: []
      per_page:
        name: per_page
        description: 'Overriding the default (10) number of listings per-page.'
        required: false
        example: '20'
        type: string
        custom: []
      page:
        name: page
        description: 'Pagination page to be fetched.'
        required: false
        example: '1'
        type: string
        custom: []
    cleanQueryParameters:
      order_by: 'name:asc,created_at:asc'
      drafted: with
      deleted: with
      per_page: '20'
      page: '1'
    bodyParameters:
      term:
        name: term
        description: ''
        required: false
        example: animi
        type: string
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 50
        type: integer
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 45
        type: integer
        custom: []
      drafted:
        name: drafted
        description: 'Must be one of <code>with</code>, <code>without</code>, or <code>only</code>.'
        required: false
        example: without
        type: string
        custom: []
      deleted:
        name: deleted
        description: 'Must be one of <code>with</code>, <code>without</code>, or <code>only</code>.'
        required: false
        example: only
        type: string
        custom: []
      order_by:
        name: order_by
        description: ''
        required: false
        example:
          - impedit
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      term: animi
      page: 50
      per_page: 45
      drafted: without
      deleted: only
      order_by:
        - impedit
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8gecPdkb6aEhDfVZ51364va'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/portal/experiences/{experience_ref}/show'
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Experience'
      description: 'Retrieve info about specified experience.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      experience_ref:
        name: experience_ref
        description: 'The ref attribute of the experience.'
        required: true
        example: 9762db71-f5a6-41c4-913e-90b8aebad733
        type: string
        custom: []
    cleanUrlParameters:
      experience_ref: 9762db71-f5a6-41c4-913e-90b8aebad733
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6ae835Zga6bV4kDd1cEPvhf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/portal/experiences/store
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add Experience'
      description: 'Add a new experience to the system.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the new experience.'
        required: true
        example: Atmosphere
        type: string
        custom: []
      values:
        name: values
        description: 'Specify values for experiences.'
        required: true
        example:
          - Amazing
          - Unbelievable
          - Exciting
        type: 'string[]'
        custom: []
      icon:
        name: icon
        description: 'The icon associated to experience'
        required: true
        example: dolorum
        type: string
        custom: []
      is_draft:
        name: is_draft
        description: ''
        required: false
        example: true
        type: boolean
        custom: []
    cleanBodyParameters:
      name: Atmosphere
      values:
        - Amazing
        - Unbelievable
        - Exciting
      icon: dolorum
      is_draft: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5f6VkPv8eZ614acgdDabhE3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/portal/experiences/{experience_ref}/update'
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Experience'
      description: 'Update existing experience.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      experience_ref:
        name: experience_ref
        description: 'The ref attribute of the experience.'
        required: true
        example: 9762db71-f5a6-41c4-913e-90b8aebad733
        type: string
        custom: []
    cleanUrlParameters:
      experience_ref: 9762db71-f5a6-41c4-913e-90b8aebad733
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the new experience.'
        required: true
        example: Atmosphere
        type: string
        custom: []
      values:
        name: values
        description: 'Specify values for experiences.'
        required: true
        example:
          - Amazing
          - Unbelievable
          - Exciting
        type: 'string[]'
        custom: []
      icon:
        name: icon
        description: 'The icon associated to experience'
        required: true
        example: alias
        type: string
        custom: []
    cleanBodyParameters:
      name: Atmosphere
      values:
        - Amazing
        - Unbelievable
        - Exciting
      icon: alias
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DZeda3hPE65ag1k6c4Vv8bf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/portal/experiences/{experience_ref}/delete'
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Experience'
      description: 'Deleting experience.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      experience_ref:
        name: experience_ref
        description: 'The ref attribute of the experience.'
        required: true
        example: 9762db71-f5a6-41c4-913e-90b8aebad733
        type: string
        custom: []
    cleanUrlParameters:
      experience_ref: 9762db71-f5a6-41c4-913e-90b8aebad733
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k8dDa46eV1a3ZPcv6E5bhfg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/portal/experiences/draft
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark one or more experiences as draft'
      description: 'Drafting experience.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'The array of valid ids belonging to experiences to be drafted.'
        required: true
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      ids:
        - 1
        - 2
        - 3
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3Pe66ag4kaVf1hvEZbcD58d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/portal/experiences/publish
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark one or more experiences as published'
      description: 'Publishing experience.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'The array of valid ids belonging to experiences to be published.'
        required: true
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      ids:
        - 1
        - 2
        - 3
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer egdPv84c3aVfhkbE65Za1D6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/v1/portal/experiences/delete
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Experiences Multi-deletion'
      description: 'Deleting Multiple Experiences'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      experiences:
        name: experiences
        description: 'The array of valid ids belonging to experiences to be deleted.'
        required: true
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      experiences:
        - 1
        - 2
        - 3
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer efPaZ6bhaVd4681cgk53vDE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/portal/experiences/restore
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore Experience'
      description: 'restoring experience.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      experiences:
        name: experiences
        description: 'The array of valid ids belonging to experiences to be deleted.'
        required: true
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      experiences:
        - 1
        - 2
        - 3
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1vZP6hDkc5db86E3V4afgae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/v1/portal/experiences/delete/force
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Experiences Permanent Multi-deletion'
      description: 'Deleting Multiple Experiences Permanently'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      experiences:
        name: experiences
        description: 'The array of valid ids belonging to experiences to be deleted permanently.'
        required: true
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      experiences:
        - 1
        - 2
        - 3
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/experiences/stats/summary
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Experience Stats'
      description: |-
        Get Experience Stats Summary.
        s
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      year:
        name: year
        description: 'Specifying method of filtering query by year.'
        required: false
        example: '2022'
        type: string
        custom: []
      period:
        name: period
        description: 'Specifying method of filtering query by time period.'
        required: false
        example: 24h
        type: string
        custom: []
    cleanQueryParameters:
      year: '2022'
      period: 24h
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1Efag6P6Zk5D4Vc8hb3veda'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/portal/events/{event_ref}/experiences'
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Event Experiences'
      description: 'Endpoint lists available experiences for a specified event.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      event_ref:
        name: event_ref
        description: 'The ref attribute of the event.'
        required: true
        example: 9762db71-f5a6-41c4-913e-90b8aebad733
        type: string
        custom: []
    cleanUrlParameters:
      event_ref: 9762db71-f5a6-41c4-913e-90b8aebad733
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4Dgb36h1P6cZvkae5aEd8Vf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/portal/events/{event_ref}/add-experience'
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add/Update Event Experience'
      description: 'Create a new event experience.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      event_ref:
        name: event_ref
        description: 'The ref attribute of the event.'
        required: true
        example: 9762db71-f5a6-41c4-913e-90b8aebad733
        type: string
        custom: []
    cleanUrlParameters:
      event_ref: 9762db71-f5a6-41c4-913e-90b8aebad733
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      experience:
        name: experience
        description: 'Specify name attribute of experience being associated to event.'
        required: true
        example: Atmosphere
        type: string
        custom: []
      value:
        name: value
        description: 'Specify an experience value (from list of available values on selected experience above).'
        required: true
        example: Amazing
        type: string
        custom: []
      description:
        name: description
        description: 'Provide a description'
        required: true
        example: 'In impedit non odio.'
        type: string
        custom: []
    cleanBodyParameters:
      experience: Atmosphere
      value: Amazing
      description: 'In impedit non odio.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gfVaZP6DkbaE81cd5he3v46'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/portal/events/{event_ref}/remove-experiences'
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove Event Experience(s)'
      description: 'Remove experiences from a single event.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      event_ref:
        name: event_ref
        description: 'The ref attribute of the event.'
        required: true
        example: 9762db71-f5a6-41c4-913e-90b8aebad733
        type: string
        custom: []
    cleanUrlParameters:
      event_ref: 9762db71-f5a6-41c4-913e-90b8aebad733
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      experiences:
        name: experiences
        description: ''
        required: true
        example:
          - 20
        type: 'integer[]'
        custom: []
      'experiences[]':
        name: 'experiences[]'
        description: 'Specify ids for experiences to be removed from event. [1, 2, 3]'
        required: true
        example: soluta
        type: string
        custom: []
    cleanBodyParameters:
      experiences:
        - 20
      'experiences[]': soluta
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h85gd4b1kZcVa6EavefPD63'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/client/experiences
    metadata:
      groupName: Experience
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Experiences'
      description: 'Endpoint lists available experiences.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      term:
        name: term
        description: 'Filter by term.'
        required: false
        example: null
        type: string
        custom: []
      order_by:
        name: order_by
        description: 'Specifying method of ordering query. Multiple values can be provided by listing items separated by comma.'
        required: false
        example: 'name:asc,created_at:asc'
        type: string
        custom: []
      drafted:
        name: drafted
        description: 'Specifying how to interact with drafted items.'
        required: false
        example: with
        type: string
        custom: []
      deleted:
        name: deleted
        description: 'Specifying how to interact with soft-deleted items.'
        required: false
        example: with
        type: string
        custom: []
      per_page:
        name: per_page
        description: 'Overriding the default (10) number of listings per-page.'
        required: false
        example: '20'
        type: string
        custom: []
      page:
        name: page
        description: 'Pagination page to be fetched.'
        required: false
        example: '1'
        type: string
        custom: []
    cleanQueryParameters:
      order_by: 'name:asc,created_at:asc'
      drafted: with
      deleted: with
      per_page: '20'
      page: '1'
    bodyParameters:
      term:
        name: term
        description: ''
        required: false
        example: aperiam
        type: string
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 1
        type: integer
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 19
        type: integer
        custom: []
      drafted:
        name: drafted
        description: 'Must be one of <code>with</code>, <code>without</code>, or <code>only</code>.'
        required: false
        example: only
        type: string
        custom: []
      deleted:
        name: deleted
        description: 'Must be one of <code>with</code>, <code>without</code>, or <code>only</code>.'
        required: false
        example: without
        type: string
        custom: []
      order_by:
        name: order_by
        description: ''
        required: false
        example:
          - ut
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      term: aperiam
      page: 1
      per_page: 19
      drafted: only
      deleted: without
      order_by:
        - ut
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"status":false,"message":"Unauthorized","errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer habcZ14kV6PEve58fd63gaD'
    controller: null
    method: null
    route: null
    custom: []
