## Autogenerated by Scribe. DO NOT MODIFY.

name: Pages
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/portal/pages
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Pages'
      description: 'Get paginated list of pages.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      drafted:
        name: drafted
        description: 'Specifying how to interact with drafted items.'
        required: false
        example: with
        type: string
        custom: []
      deleted:
        name: deleted
        description: 'Specifying how to interact with soft-deleted items.'
        required: false
        example: with
        type: string
        custom: []
      term:
        name: term
        description: 'Specifying a keyword similar to page name, url, meta title, or meta description.'
        required: false
        example: 'https://somelink.test'
        type: string
        custom: []
      status:
        name: status
        description: 'Specifying the inclusion of only pages with status attribute online/offline.'
        required: false
        example: '1'
        type: string
        custom: []
      per_page:
        name: per_page
        description: 'Overriding the default (10) number of listings per-page.'
        required: false
        example: '20'
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: "Specifying comma seperated values matching items in page's meta keywords attribute array."
        required: false
        example: keyword-1
        type: string
        custom: []
      faqs:
        name: faqs
        description: 'Specifying the inclusion of ONLY pages with associated FAQs.'
        required: false
        example: with
        type: string
        custom: []
      period:
        name: period
        description: 'Filter by specifying a period.'
        required: false
        example: '1h,6h,12h,24h,7d,30d,90d,180d,1y,All'
        type: string
        custom: []
      year:
        name: year
        description: 'Filter by specifying a year.'
        required: false
        example: '2022'
        type: string
        custom: []
      order_by:
        name: order_by
        description: 'Specifying method of ordering query. Multiple values can be provided by listing items separated by comma.'
        required: false
        example: 'name:desc,url:asc,created_at:desc'
        type: string
        custom: []
    cleanQueryParameters:
      drafted: with
      deleted: with
      term: 'https://somelink.test'
      status: '1'
      per_page: '20'
      meta_keywords: keyword-1
      faqs: with
      period: '1h,6h,12h,24h,7d,30d,90d,180d,1y,All'
      year: '2022'
      order_by: 'name:desc,url:asc,created_at:desc'
    bodyParameters:
      period:
        name: period
        description: 'Must be one of <code>1h</code>, <code>6h</code>, <code>12h</code>, <code>24h</code>, <code>7d</code>, <code>30d</code>, <code>90d</code>, <code>180d</code>, <code>1y</code>, or <code>All</code>.'
        required: false
        example: 24h
        type: string
        custom: []
      meta_keywords:
        name: meta_keywords
        description: ''
        required: false
        example: autem
        type: string
        custom: []
      faqs:
        name: faqs
        description: 'Must be one of <code>with</code> or <code>without</code>.'
        required: false
        example: without
        type: string
        custom: []
      term:
        name: term
        description: 'Must not be greater than 50 characters.'
        required: false
        example: phmbokbfasqpafkvd
        type: string
        custom: []
      year:
        name: year
        description: 'Must not be greater than 4 characters.'
        required: false
        example: c
        type: string
        custom: []
      status:
        name: status
        description: 'Must be one of <code>1</code> or <code>0</code>.'
        required: false
        example: 1
        type: integer
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 6
        type: number
        custom: []
      drafted:
        name: drafted
        description: 'Must be one of <code>with</code>, <code>without</code>, or <code>only</code>.'
        required: false
        example: only
        type: string
        custom: []
      deleted:
        name: deleted
        description: 'Must be one of <code>with</code>, <code>without</code>, or <code>only</code>.'
        required: false
        example: only
        type: string
        custom: []
      order_by:
        name: order_by
        description: ''
        required: false
        example:
          - nemo
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      period: 24h
      meta_keywords: autem
      faqs: without
      term: phmbokbfasqpafkvd
      year: c
      status: 1
      per_page: 6
      drafted: only
      deleted: only
      order_by:
        - nemo
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/pages/create
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch Page Options'
      description: 'Retrieve page creation options data.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E4bdfcvPaa6kV6g1hD5Ze83'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/pages/edit
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch Page Options for Edit'
      description: 'Retrieve page creation options data.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V5468bfEgeh1a3dckP6aZvD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/portal/pages/{ref}/show'
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch Portal Page'
      description: 'Retrieve page data matching specified ref attribute.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
      X-Platform-User-Identifier-Key: RTHUB.v1.98591b54-db61-46d4-9d29-47a8a7f325a8.1675084780
    urlParameters:
      ref:
        name: ref
        description: 'The ref attribute of the page.'
        required: true
        example: 97f62d3d-bf9d-42ac-88c4-9d56cd910d7a
        type: string
        custom: []
    cleanUrlParameters:
      ref: 97f62d3d-bf9d-42ac-88c4-9d56cd910d7a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8ZDv6aea1kPd4fEg3bchV65'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/portal/pages/{ref}/edit'
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch Portal Page'
      description: 'Retrieve page data matching specified ref attribute.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
      X-Platform-User-Identifier-Key: RTHUB.v1.98591b54-db61-46d4-9d29-47a8a7f325a8.1675084780
    urlParameters:
      ref:
        name: ref
        description: 'The ref attribute of the page.'
        required: true
        example: 97f62d3d-bf9d-42ac-88c4-9d56cd910d7a
        type: string
        custom: []
    cleanUrlParameters:
      ref: 97f62d3d-bf9d-42ac-88c4-9d56cd910d7a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bkZea3c6fP1DagVh8E6v45d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/portal/pages/store
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new Page'
      description: 'New pages can be created with optional FAQs properties for pages that requires FAQs.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Specifies page name attribute.'
        required: true
        example: 'FAQs Page'
        type: string
        custom: []
      url:
        name: url
        description: 'Page URL. Must be a valid URL.'
        required: true
        example: 'https://path-for-page.test'
        type: string
        custom: []
      status:
        name: status
        description: 'Must be one of <code>1</code> or <code>0</code>.'
        required: true
        example: 1
        type: integer
        custom: []
      meta:
        name: meta
        description: ''
        required: true
        example: []
        type: object
        custom: []
      meta.title:
        name: meta.title
        description: 'Specifies title metadata.'
        required: false
        example: Title
        type: string
        custom: []
      meta.description:
        name: meta.description
        description: 'Specifies description metadata for combination. Must not be greater than 255 characters.'
        required: false
        example: 'Some description.'
        type: string
        custom: []
      meta.keywords:
        name: meta.keywords
        description: 'Specifies an array of keywords metadata for combination.'
        required: true
        example:
          - tag
        type: 'string[]'
        custom: []
      meta.robots:
        name: meta.robots
        description: 'Must be one of <code>index</code>, <code>noindex</code>, <code>follow</code>, or <code>nofollow</code>.'
        required: true
        example:
          - nofollow
        type: 'string[]'
        custom: []
      meta.canonical_url:
        name: meta.canonical_url
        description: 'The canonical url. Must not be greater than 255 characters.'
        required: false
        example: 'https://example.com'
        type: string
        custom: []
      faqs:
        name: faqs
        description: ''
        required: true
        example:
          - []
        type: 'object[]'
        custom: []
      is_draft:
        name: is_draft
        description: 'save the new entity as a draft or not.'
        required: false
        example: false
        type: boolean
        custom: []
      'faqs[].section':
        name: 'faqs[].section'
        description: 'The FAQ section.'
        required: true
        example: 'Mollit tempor eiusmod dolor amet laboris ad officia cillum aute ut consequat.'
        type: string
        custom: []
      'faqs[].description':
        name: 'faqs[].description'
        description: 'The FAQ description.'
        required: false
        example: |-
          Ad magna dolor eiusmod sint nostrud quis laborum labore sit tempor. Irure irure esse ea eu amet duis enim. Eiusmod esse anim eiusmod exercitation ex. Fugiat sint adipisicing dolore culpa. Et eiusmod et sit aliquip qui. Consectetur deserunt sunt proident exercitation cillum fugiat cillum elit veniam eiusmod qui anim.

                          Tempor et incididunt laborum excepteur ad aliquip veniam. Ex qui deserunt occaecat non in tempor adipisicing mollit voluptate. Tempor ex eiusmod elit Lorem sint ea. Officia dolore minim Lorem reprehenderit eiusmod ut tempor ex Lorem in enim ex exercitation.

                          Sunt minim eiusmod excepteur in aute velit aute cupidatat culpa nisi laborum fugiat mollit. Enim consequat do nisi do consequat occaecat cillum. Qui ea et quis amet minim commodo nostrud.

                          Dolore aliquip incididunt labore ipsum excepteur sint adipisicing aute ea mollit. Eu commodo irure reprehenderit ipsum laboris excepteur consectetur et pariatur. Aliquip ipsum ex occaecat exercitation ut mollit nisi. Irure est nisi consectetur aliquip adipisicing exercitation anim aliqua. Pariatur sint labore non aliquip aliqua fugiat amet esse nisi dolor ad ullamco. Excepteur aute aliquip eiusmod commodo incididunt commodo aliqua aute velit id proident adipisicing est.

                          Aliqua mollit nisi officia laborum irure sint cillum nulla aliquip velit non tempor officia. Elit veniam cillum consectetur fugiat pariatur exercitation deserunt voluptate officia minim excepteur quis elit ullamco. Enim adipisicing excepteur deserunt eiusmod reprehenderit consequat fugiat exercitation. Dolor sint laborum consequat occaecat adipisicing aliqua enim ad nulla. Cillum exercitation cillum adipisicing ullamco. Anim occaecat officia voluptate enim dolor in consectetur consectetur consectetur Lorem sit id. Sunt eu excepteur ad eu esse.

                          Id id exercitation reprehenderit voluptate tempor. Excepteur tempor ipsum dolore nulla in ea deserunt nostrud Lorem amet elit ad. Officia id laboris sit enim enim duis cillum veniam non irure commodo veniam duis. Nulla culpa nulla ad laborum. Reprehenderit dolor eiusmod reprehenderit adipisicing laboris Lorem dolore. In eu quis ipsum labore sit irure.
        type: string
        custom: []
      'faqs[].details':
        name: 'faqs[].details'
        description: 'This field is required when <code>faqs.*</code> is present.'
        required: false
        example:
          - et
        type: 'string[]'
        custom: []
      'faqs[].details[].question':
        name: 'faqs[].details[].question'
        description: ''
        required: true
        example: 'Mollit tempor eiusmod dolor amet laboris ad officia cillum aute ut consequat.'
        type: string
        custom: []
      'faqs[].details[].answer':
        name: 'faqs[].details[].answer'
        description: 'This field is required when <code>faqs.*.details.*.question</code> is present.'
        required: false
        example: |-
          Ad magna dolor eiusmod sint nostrud quis laborum labore sit tempor. Irure irure esse ea eu amet duis enim. Eiusmod esse anim eiusmod exercitation ex. Fugiat sint adipisicing dolore culpa. Et eiusmod et sit aliquip qui. Consectetur deserunt sunt proident exercitation cillum fugiat cillum elit veniam eiusmod qui anim.

                          Tempor et incididunt laborum excepteur ad aliquip veniam. Ex qui deserunt occaecat non in tempor adipisicing mollit voluptate. Tempor ex eiusmod elit Lorem sint ea. Officia dolore minim Lorem reprehenderit eiusmod ut tempor ex Lorem in enim ex exercitation.

                          Sunt minim eiusmod excepteur in aute velit aute cupidatat culpa nisi laborum fugiat mollit. Enim consequat do nisi do consequat occaecat cillum. Qui ea et quis amet minim commodo nostrud.

                          Dolore aliquip incididunt labore ipsum excepteur sint adipisicing aute ea mollit. Eu commodo irure reprehenderit ipsum laboris excepteur consectetur et pariatur. Aliquip ipsum ex occaecat exercitation ut mollit nisi. Irure est nisi consectetur aliquip adipisicing exercitation anim aliqua. Pariatur sint labore non aliquip aliqua fugiat amet esse nisi dolor ad ullamco. Excepteur aute aliquip eiusmod commodo incididunt commodo aliqua aute velit id proident adipisicing est.

                          Aliqua mollit nisi officia laborum irure sint cillum nulla aliquip velit non tempor officia. Elit veniam cillum consectetur fugiat pariatur exercitation deserunt voluptate officia minim excepteur quis elit ullamco. Enim adipisicing excepteur deserunt eiusmod reprehenderit consequat fugiat exercitation. Dolor sint laborum consequat occaecat adipisicing aliqua enim ad nulla. Cillum exercitation cillum adipisicing ullamco. Anim occaecat officia voluptate enim dolor in consectetur consectetur consectetur Lorem sit id. Sunt eu excepteur ad eu esse.

                          Id id exercitation reprehenderit voluptate tempor. Excepteur tempor ipsum dolore nulla in ea deserunt nostrud Lorem amet elit ad. Officia id laboris sit enim enim duis cillum veniam non irure commodo veniam duis. Nulla culpa nulla ad laborum. Reprehenderit dolor eiusmod reprehenderit adipisicing laboris Lorem dolore. In eu quis ipsum labore sit irure.
        type: string
        custom: []
      'faqs[].details[].images':
        name: 'faqs[].details[].images'
        description: 'Image Ref.'
        required: false
        example:
          - 97ad9df6-bc08-4729-b95e-3671dc6192c2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      name: 'FAQs Page'
      url: 'https://path-for-page.test'
      status: 1
      meta:
        title: Title
        description: 'Some description.'
        keywords:
          - tag
        robots:
          - nofollow
        canonical_url: 'https://example.com'
      faqs:
        -
          section: 'Mollit tempor eiusmod dolor amet laboris ad officia cillum aute ut consequat.'
          description: |-
            Ad magna dolor eiusmod sint nostrud quis laborum labore sit tempor. Irure irure esse ea eu amet duis enim. Eiusmod esse anim eiusmod exercitation ex. Fugiat sint adipisicing dolore culpa. Et eiusmod et sit aliquip qui. Consectetur deserunt sunt proident exercitation cillum fugiat cillum elit veniam eiusmod qui anim.

                            Tempor et incididunt laborum excepteur ad aliquip veniam. Ex qui deserunt occaecat non in tempor adipisicing mollit voluptate. Tempor ex eiusmod elit Lorem sint ea. Officia dolore minim Lorem reprehenderit eiusmod ut tempor ex Lorem in enim ex exercitation.

                            Sunt minim eiusmod excepteur in aute velit aute cupidatat culpa nisi laborum fugiat mollit. Enim consequat do nisi do consequat occaecat cillum. Qui ea et quis amet minim commodo nostrud.

                            Dolore aliquip incididunt labore ipsum excepteur sint adipisicing aute ea mollit. Eu commodo irure reprehenderit ipsum laboris excepteur consectetur et pariatur. Aliquip ipsum ex occaecat exercitation ut mollit nisi. Irure est nisi consectetur aliquip adipisicing exercitation anim aliqua. Pariatur sint labore non aliquip aliqua fugiat amet esse nisi dolor ad ullamco. Excepteur aute aliquip eiusmod commodo incididunt commodo aliqua aute velit id proident adipisicing est.

                            Aliqua mollit nisi officia laborum irure sint cillum nulla aliquip velit non tempor officia. Elit veniam cillum consectetur fugiat pariatur exercitation deserunt voluptate officia minim excepteur quis elit ullamco. Enim adipisicing excepteur deserunt eiusmod reprehenderit consequat fugiat exercitation. Dolor sint laborum consequat occaecat adipisicing aliqua enim ad nulla. Cillum exercitation cillum adipisicing ullamco. Anim occaecat officia voluptate enim dolor in consectetur consectetur consectetur Lorem sit id. Sunt eu excepteur ad eu esse.

                            Id id exercitation reprehenderit voluptate tempor. Excepteur tempor ipsum dolore nulla in ea deserunt nostrud Lorem amet elit ad. Officia id laboris sit enim enim duis cillum veniam non irure commodo veniam duis. Nulla culpa nulla ad laborum. Reprehenderit dolor eiusmod reprehenderit adipisicing laboris Lorem dolore. In eu quis ipsum labore sit irure.
          details:
            - et
      is_draft: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k6v8Ecf1VPgDaabeZd653h4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/portal/pages/{page_ref}/update'
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a Page'
      description: 'An existing page can be modified, alongside their FAQs properties when necessary.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      page_ref:
        name: page_ref
        description: ''
        required: true
        example: minima
        type: string
        custom: []
      ref:
        name: ref
        description: 'The ref attribute of the page.'
        required: true
        example: 97f62d3d-bf9d-42ac-88c4-9d56cd910d7a
        type: string
        custom: []
    cleanUrlParameters:
      page_ref: minima
      ref: 97f62d3d-bf9d-42ac-88c4-9d56cd910d7a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Specifies page name attribute.'
        required: false
        example: 'FAQs Page'
        type: string
        custom: []
      url:
        name: url
        description: 'Page URL. Must be a valid URL.'
        required: false
        example: 'https://path-for-page.test'
        type: string
        custom: []
      status:
        name: status
        description: 'Must be one of <code>1</code> or <code>0</code>.'
        required: false
        example: 1
        type: integer
        custom: []
      meta:
        name: meta
        description: ''
        required: true
        example: []
        type: object
        custom: []
      meta.title:
        name: meta.title
        description: 'Specifies title metadata.'
        required: false
        example: Title
        type: string
        custom: []
      meta.description:
        name: meta.description
        description: 'Specifies description metadata for combination. Must not be greater than 255 characters.'
        required: false
        example: 'Some description.'
        type: string
        custom: []
      meta.keywords:
        name: meta.keywords
        description: 'Specifies an array of keywords metadata for combination.'
        required: true
        example:
          - tag
        type: 'string[]'
        custom: []
      meta.robots:
        name: meta.robots
        description: 'Must be one of <code>index</code>, <code>noindex</code>, <code>follow</code>, or <code>nofollow</code>.'
        required: true
        example:
          - index
        type: 'string[]'
        custom: []
      meta.canonical_url:
        name: meta.canonical_url
        description: 'The canonical url. Must not be greater than 255 characters.'
        required: false
        example: 'https://example.com'
        type: string
        custom: []
      faqs:
        name: faqs
        description: ''
        required: false
        example:
          - est
        type: 'integer[]'
        custom: []
      'faqs[].faq_id':
        name: 'faqs[].faq_id'
        description: 'The FAQ id.'
        required: false
        example: 31
        type: integer
        custom: []
      'faqs[].section':
        name: 'faqs[].section'
        description: 'The FAQ section. This field is required when <code>faqs.*.faq_id</code> is not present.'
        required: false
        example: 'Mollit tempor eiusmod dolor amet laboris ad officia cillum aute ut consequat.'
        type: string
        custom: []
      'faqs[].description':
        name: 'faqs[].description'
        description: 'The FAQ description.'
        required: false
        example: |-
          Ad magna dolor eiusmod sint nostrud quis laborum labore sit tempor. Irure irure esse ea eu amet duis enim. Eiusmod esse anim eiusmod exercitation ex. Fugiat sint adipisicing dolore culpa. Et eiusmod et sit aliquip qui. Consectetur deserunt sunt proident exercitation cillum fugiat cillum elit veniam eiusmod qui anim.

                          Tempor et incididunt laborum excepteur ad aliquip veniam. Ex qui deserunt occaecat non in tempor adipisicing mollit voluptate. Tempor ex eiusmod elit Lorem sint ea. Officia dolore minim Lorem reprehenderit eiusmod ut tempor ex Lorem in enim ex exercitation.

                          Sunt minim eiusmod excepteur in aute velit aute cupidatat culpa nisi laborum fugiat mollit. Enim consequat do nisi do consequat occaecat cillum. Qui ea et quis amet minim commodo nostrud.

                          Dolore aliquip incididunt labore ipsum excepteur sint adipisicing aute ea mollit. Eu commodo irure reprehenderit ipsum laboris excepteur consectetur et pariatur. Aliquip ipsum ex occaecat exercitation ut mollit nisi. Irure est nisi consectetur aliquip adipisicing exercitation anim aliqua. Pariatur sint labore non aliquip aliqua fugiat amet esse nisi dolor ad ullamco. Excepteur aute aliquip eiusmod commodo incididunt commodo aliqua aute velit id proident adipisicing est.

                          Aliqua mollit nisi officia laborum irure sint cillum nulla aliquip velit non tempor officia. Elit veniam cillum consectetur fugiat pariatur exercitation deserunt voluptate officia minim excepteur quis elit ullamco. Enim adipisicing excepteur deserunt eiusmod reprehenderit consequat fugiat exercitation. Dolor sint laborum consequat occaecat adipisicing aliqua enim ad nulla. Cillum exercitation cillum adipisicing ullamco. Anim occaecat officia voluptate enim dolor in consectetur consectetur consectetur Lorem sit id. Sunt eu excepteur ad eu esse.

                          Id id exercitation reprehenderit voluptate tempor. Excepteur tempor ipsum dolore nulla in ea deserunt nostrud Lorem amet elit ad. Officia id laboris sit enim enim duis cillum veniam non irure commodo veniam duis. Nulla culpa nulla ad laborum. Reprehenderit dolor eiusmod reprehenderit adipisicing laboris Lorem dolore. In eu quis ipsum labore sit irure.
        type: string
        custom: []
      'faqs[].details':
        name: 'faqs[].details'
        description: 'This field is required when <code>faqs.*</code> is present.'
        required: false
        example:
          - qui
        type: 'integer[]'
        custom: []
      'faqs[].details[].details_id':
        name: 'faqs[].details[].details_id'
        description: 'Must be one of <code></code>.'
        required: false
        example: 1
        type: integer
        custom: []
      'faqs[].details[].question':
        name: 'faqs[].details[].question'
        description: 'This field is required when <code>faqs.*.details.*.details_id</code> is not present.'
        required: false
        example: 'Mollit tempor eiusmod dolor amet laboris ad officia cillum aute ut consequat.'
        type: string
        custom: []
      'faqs[].details[].answer':
        name: 'faqs[].details[].answer'
        description: 'This field is required when <code>faqs.*.details.*.details_id</code> is not present.'
        required: false
        example: |-
          Ad magna dolor eiusmod sint nostrud quis laborum labore sit tempor. Irure irure esse ea eu amet duis enim. Eiusmod esse anim eiusmod exercitation ex. Fugiat sint adipisicing dolore culpa. Et eiusmod et sit aliquip qui. Consectetur deserunt sunt proident exercitation cillum fugiat cillum elit veniam eiusmod qui anim.

                          Tempor et incididunt laborum excepteur ad aliquip veniam. Ex qui deserunt occaecat non in tempor adipisicing mollit voluptate. Tempor ex eiusmod elit Lorem sint ea. Officia dolore minim Lorem reprehenderit eiusmod ut tempor ex Lorem in enim ex exercitation.

                          Sunt minim eiusmod excepteur in aute velit aute cupidatat culpa nisi laborum fugiat mollit. Enim consequat do nisi do consequat occaecat cillum. Qui ea et quis amet minim commodo nostrud.

                          Dolore aliquip incididunt labore ipsum excepteur sint adipisicing aute ea mollit. Eu commodo irure reprehenderit ipsum laboris excepteur consectetur et pariatur. Aliquip ipsum ex occaecat exercitation ut mollit nisi. Irure est nisi consectetur aliquip adipisicing exercitation anim aliqua. Pariatur sint labore non aliquip aliqua fugiat amet esse nisi dolor ad ullamco. Excepteur aute aliquip eiusmod commodo incididunt commodo aliqua aute velit id proident adipisicing est.

                          Aliqua mollit nisi officia laborum irure sint cillum nulla aliquip velit non tempor officia. Elit veniam cillum consectetur fugiat pariatur exercitation deserunt voluptate officia minim excepteur quis elit ullamco. Enim adipisicing excepteur deserunt eiusmod reprehenderit consequat fugiat exercitation. Dolor sint laborum consequat occaecat adipisicing aliqua enim ad nulla. Cillum exercitation cillum adipisicing ullamco. Anim occaecat officia voluptate enim dolor in consectetur consectetur consectetur Lorem sit id. Sunt eu excepteur ad eu esse.

                          Id id exercitation reprehenderit voluptate tempor. Excepteur tempor ipsum dolore nulla in ea deserunt nostrud Lorem amet elit ad. Officia id laboris sit enim enim duis cillum veniam non irure commodo veniam duis. Nulla culpa nulla ad laborum. Reprehenderit dolor eiusmod reprehenderit adipisicing laboris Lorem dolore. In eu quis ipsum labore sit irure.
        type: string
        custom: []
      'faqs[].details[].images':
        name: 'faqs[].details[].images'
        description: 'Image Ref.'
        required: true
        example:
          - 97ad9df6-bc08-4729-b95e-3671dc6192c2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      name: 'FAQs Page'
      url: 'https://path-for-page.test'
      status: 1
      meta:
        title: Title
        description: 'Some description.'
        keywords:
          - tag
        robots:
          - index
        canonical_url: 'https://example.com'
      faqs:
        - est
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8ca36d1ekfgaPEDbv64hZ5V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/portal/pages/publish
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark one or many Pages as Published'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'The list of ids associated with pages.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      ids:
        - 1
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 65Z6daVfEb4hPg1e3aD8vck'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/portal/pages/draft
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark one or many Pages as Draft'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'The list of ids associated with pages.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      ids:
        - 1
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DV14f6kdP3hZgacb856veEa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/portal/pages/{page_ref}/delete'
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Page'
      description: 'Delete page data matching specified ref attribute.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      page_ref:
        name: page_ref
        description: ''
        required: true
        example: enim
        type: string
        custom: []
      ref:
        name: ref
        description: 'The ref attribute of the page.'
        required: true
        example: 97f62d3d-bf9d-42ac-88c4-9d56cd910d7a
        type: string
        custom: []
    cleanUrlParameters:
      page_ref: enim
      ref: 97f62d3d-bf9d-42ac-88c4-9d56cd910d7a
    queryParameters:
      permanently:
        name: permanently
        description: 'Optionally specifying to force-delete model, instead of the default soft-delete.'
        required: false
        example: '1'
        type: string
        custom: []
    cleanQueryParameters:
      permanently: '1'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cb6ag4a186edDkhVP5EZfv3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/v1/portal/pages/delete-many
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Many Pages'
      description: 'Delete multiple pages data by specifying their ids.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      permanently:
        name: permanently
        description: 'Optionally specifying to force-delete model, instead of the default soft-delete.'
        required: false
        example: '1'
        type: string
        custom: []
    cleanQueryParameters:
      permanently: '1'
    bodyParameters:
      pages_ids:
        name: pages_ids
        description: 'The list of ids associated with pages.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      pages_ids:
        - 1
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6PE6dcg3b1458kfeZaVDhva'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/portal/pages/restore-many
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore Many Pages'
      description: 'Restore multiple pages data by specifying their ids.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pages_ids:
        name: pages_ids
        description: 'The list of ids associated with pages.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      pages_ids:
        - 1
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hvP6ZVa3kEf1b456cdgea8D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/portal/pages/{page_ref}/delete-faqs'
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete One/Many FAQs'
      description: 'Delete multiple Page FAQs by specifying their ids.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      page_ref:
        name: page_ref
        description: ''
        required: true
        example: quo
        type: string
        custom: []
    cleanUrlParameters:
      page_ref: quo
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      faqs_ids:
        name: faqs_ids
        description: 'The list of ids associated with specific page FAQs ids.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      faqs_ids:
        - 1
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kb5D1vZ866Vfah4PdgecaE3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/portal/pages/{page_ref}/{faq_ref}/delete-faq-details'
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete One/Many FAQ Details'
      description: 'Delete multiple Page FAQ details by specifying their ids.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      page_ref:
        name: page_ref
        description: ''
        required: true
        example: vitae
        type: string
        custom: []
      faq_ref:
        name: faq_ref
        description: ''
        required: true
        example: 97f9bd34-499a-4a5e-bd6f-6e0436a0ca78
        type: string
        custom: []
    cleanUrlParameters:
      page_ref: vitae
      faq_ref: 97f9bd34-499a-4a5e-bd6f-6e0436a0ca78
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      faq_details_ids:
        name: faq_details_ids
        description: 'The list of ids associated with specific page faq_details ids.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      faq_details_ids:
        - 1
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5b6EfDcVZ346ae1advkh8Pg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/portal/pages/{page_ref}/delete-meta'
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Meta'
      description: 'Delete Page Meta.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      page_ref:
        name: page_ref
        description: ''
        required: true
        example: at
        type: string
        custom: []
    cleanUrlParameters:
      page_ref: at
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vVaagfc5h6831b46EdPZkDe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/pages/stats/summary
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Pages Stats'
      description: 'Get Pages Stats Summary.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      year:
        name: year
        description: 'Specifying method of filtering query by year.'
        required: false
        example: '2022'
        type: string
        custom: []
      period:
        name: period
        description: 'Specifying method of filtering query by time period.'
        required: false
        example: 24h
        type: string
        custom: []
    cleanQueryParameters:
      year: '2022'
      period: 24h
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer khP6abaZ1cDd3eVEf4586vg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/client/pages/{ref}/show'
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch Client Page'
      description: 'Retrieve page data matching specified ref attribute on the Client application.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
      X-Platform-User-Identifier-Key: RTHUB.v1.98591b54-db61-46d4-9d29-47a8a7f325a8.1675084780
    urlParameters:
      ref:
        name: ref
        description: 'The ref attribute of the page.'
        required: true
        example: 97f62d3d-bf9d-42ac-88c4-9d56cd910d7a
        type: string
        custom: []
    cleanUrlParameters:
      ref: 97f62d3d-bf9d-42ac-88c4-9d56cd910d7a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"status":false,"message":"Page not found.","errors":null}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/client/pages/fetch-by-url
    metadata:
      groupName: Pages
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch Page by URL'
      description: 'Retrieve page data matching specified URL.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      url:
        name: url
        description: 'The url attribute of the page.'
        required: true
        example: 'https://page-one.test'
        type: string
        custom: []
    cleanBodyParameters:
      url: 'https://page-one.test'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
