## Autogenerated by Scribe. DO NOT MODIFY.

name: Upload
description: |-

  APIs for managing uploads
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/portal/uploads
    metadata:
      groupName: Upload
      groupDescription: |-

        APIs for managing uploads
      subgroup: ''
      subgroupDescription: ''
      title: 'The list of uploads'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      per_page:
        name: per_page
        description: 'The number of uploads to return.'
        required: false
        example: 10
        type: integer
        custom: []
      type:
        name: type
        description: 'The type of upload.'
        required: false
        example: image
        type: string
        custom: []
      term:
        name: term
        description: 'The search term.'
        required: false
        example: image
        type: string
        custom: []
      year:
        name: year
        description: 'The year of the upload.'
        required: false
        example: 2021
        type: integer
        custom: []
      page:
        name: page
        description: 'The page number.'
        required: false
        example: 1
        type: integer
        custom: []
      order_by:
        name: order_by
        description: 'Specifying method of ordering query. Multiple values can be provided by listing items separated by comma.'
        required: false
        example: 'created_at:desc'
        type: string
        custom: []
    cleanQueryParameters:
      per_page: 10
      type: image
      term: image
      year: 2021
      page: 1
      order_by: 'created_at:desc'
    bodyParameters:
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 41
        type: number
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 50
        type: integer
        custom: []
      type:
        name: type
        description: 'Must be one of <code>image</code>, <code>video</code>, <code>pdf</code>, <code>csv</code>, or <code>audio</code>.'
        required: false
        example: video
        type: string
        custom: []
      year:
        name: year
        description: 'Must be 4 digits. Must be a valid date in the format <code>Y</code>.'
        required: false
        example: '2024'
        type: string
        custom: []
      term:
        name: term
        description: ''
        required: false
        example: nemo
        type: string
        custom: []
      order_by:
        name: order_by
        description: ''
        required: false
        example:
          - pariatur
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      per_page: 41
      page: 50
      type: video
      year: '2024'
      term: nemo
      order_by:
        - pariatur
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aD6vPhcadfb8ZEe31kV654g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/portal/uploads/{ref}/show'
    metadata:
      groupName: Upload
      groupDescription: |-

        APIs for managing uploads
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the form for creating a new resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      ref:
        name: ref
        description: ''
        required: true
        example: 97620161-69c6-4b12-b219-d99e428fbdb2
        type: string
        custom: []
      upload:
        name: upload
        description: 'The ref attribute of the upload.'
        required: true
        example: 9762db71-f5a6-41c4-913e-90b8aebad733
        type: string
        custom: []
    cleanUrlParameters:
      ref: 97620161-69c6-4b12-b219-d99e428fbdb2
      upload: 9762db71-f5a6-41c4-913e-90b8aebad733
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer akc6f5h4v1aEd6D8e3gPVZb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/portal/uploads/store
    metadata:
      groupName: Upload
      groupDescription: |-

        APIs for managing uploads
      subgroup: ''
      subgroupDescription: ''
      title: 'upload files'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      media:
        name: media
        description: ''
        required: true
        example:
          - et
        type: 'string[]'
        custom: []
      'media[].title':
        name: 'media[].title'
        description: ''
        required: false
        example: sed
        type: string
        custom: []
      'media[].alt':
        name: 'media[].alt'
        description: ''
        required: false
        example: rem
        type: string
        custom: []
      'media[].caption':
        name: 'media[].caption'
        description: ''
        required: false
        example: voluptatem
        type: string
        custom: []
      'media[].description':
        name: 'media[].description'
        description: ''
        required: false
        example: 'Rerum est voluptatem molestiae omnis cum perferendis.'
        type: string
        custom: []
      'media[].private':
        name: 'media[].private'
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
      'media[].file':
        name: 'media[].file'
        description: ''
        required: true
        example: rerum
        type: string
        custom: []
      'media[].device_versions':
        name: 'media[].device_versions'
        description: ''
        required: false
        example: null
        type: object
        custom: []
      'media[].device_versions.card':
        name: 'media[].device_versions.card'
        description: ''
        required: false
        example: qui
        type: string
        custom: []
      'media[].device_versions.mobile':
        name: 'media[].device_versions.mobile'
        description: ''
        required: false
        example: est
        type: string
        custom: []
      'media[].device_versions.tablet':
        name: 'media[].device_versions.tablet'
        description: ''
        required: false
        example: voluptatem
        type: string
        custom: []
      'media[].device_versions.desktop':
        name: 'media[].device_versions.desktop'
        description: ''
        required: false
        example: occaecati
        type: string
        custom: []
    cleanBodyParameters:
      media:
        -
          device_versions:
            card: qui
            mobile: est
            tablet: voluptatem
            desktop: occaecati
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Eaef653PZbkDhd6aV81vc4g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/portal/uploads/{upload_ref}/update'
    metadata:
      groupName: Upload
      groupDescription: |-

        APIs for managing uploads
      subgroup: ''
      subgroupDescription: ''
      title: 'Update file'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      upload_ref:
        name: upload_ref
        description: ''
        required: true
        example: 97620161-69c6-4b12-b219-d99e428fbdb2
        type: string
        custom: []
      upload:
        name: upload
        description: 'The ref attribute of the upload.'
        required: true
        example: 9762db71-f5a6-41c4-913e-90b8aebad733
        type: string
        custom: []
    cleanUrlParameters:
      upload_ref: 97620161-69c6-4b12-b219-d99e428fbdb2
      upload: 9762db71-f5a6-41c4-913e-90b8aebad733
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      media:
        name: media
        description: 'The media to be updated.'
        required: true
        example:
          - doloribus
        type: 'string[]'
        custom: []
      'media[].title':
        name: 'media[].title'
        description: ''
        required: false
        example: soluta
        type: string
        custom: []
      'media[].alt':
        name: 'media[].alt'
        description: ''
        required: false
        example: rem
        type: string
        custom: []
      'media[].caption':
        name: 'media[].caption'
        description: ''
        required: false
        example: harum
        type: string
        custom: []
      'media[].description':
        name: 'media[].description'
        description: ''
        required: false
        example: 'Quia necessitatibus illum deleniti eos qui.'
        type: string
        custom: []
      'media[].file':
        name: 'media[].file'
        description: ''
        required: false
        example: est
        type: string
        custom: []
      'media[].device_versions':
        name: 'media[].device_versions'
        description: ''
        required: false
        example: null
        type: object
        custom: []
      'media[].device_versions.card':
        name: 'media[].device_versions.card'
        description: ''
        required: false
        example: autem
        type: string
        custom: []
      'media[].device_versions.mobile':
        name: 'media[].device_versions.mobile'
        description: ''
        required: false
        example: minus
        type: string
        custom: []
      'media[].device_versions.tablet':
        name: 'media[].device_versions.tablet'
        description: ''
        required: false
        example: optio
        type: string
        custom: []
      'media[].device_versions.desktop':
        name: 'media[].device_versions.desktop'
        description: ''
        required: false
        example: amet
        type: string
        custom: []
    cleanBodyParameters:
      media:
        -
          device_versions:
            card: autem
            mobile: minus
            tablet: optio
            desktop: amet
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v8heaDcfZ35Ed6b14gPaV6k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/portal/uploads/{upload_ref}/delete'
    metadata:
      groupName: Upload
      groupDescription: |-

        APIs for managing uploads
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete uploaded resource'
      description: 'Remove the specified resource from storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      upload_ref:
        name: upload_ref
        description: ''
        required: true
        example: 97620161-69c6-4b12-b219-d99e428fbdb2
        type: string
        custom: []
      upload:
        name: upload
        description: 'The ref attribute of the upload.'
        required: true
        example: 9762db71-f5a6-41c4-913e-90b8aebad733
        type: string
        custom: []
    cleanUrlParameters:
      upload_ref: 97620161-69c6-4b12-b219-d99e428fbdb2
      upload: 9762db71-f5a6-41c4-913e-90b8aebad733
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8d6DEeac4615fPvhbkagV3Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/v1/portal/uploads/delete-many
    metadata:
      groupName: Upload
      groupDescription: |-

        APIs for managing uploads
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete multiple uploaded resources'
      description: 'Remove multiple resources from storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      uploads:
        name: uploads
        description: 'The list of upload ref attributes.'
        required: true
        example:
          - 9762db71-f5a6-41c4-913e-90b8aebad733
          - 9762db71-f5a6-41c4-913e-90b8aebad733
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      uploads:
        - 9762db71-f5a6-41c4-913e-90b8aebad733
        - 9762db71-f5a6-41c4-913e-90b8aebad733
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a6afg8bV31hkE5cd6DPv4Ze'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/image/version/storage-link
    metadata:
      groupName: Upload
      groupDescription: |-

        APIs for managing uploads
      subgroup: ''
      subgroupDescription: ''
      title: 'Get image version storage link'
      description: 'Get the storage link for the specified image version.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      image_path:
        name: image_path
        description: 'The path to the image.'
        required: true
        example: uploads/images/2021/09/9762db71-f5a6-41c4-913e-90b8aebad733.jpg
        type: string
        custom: []
      device_version:
        name: device_version
        description: 'The device version.'
        required: true
        example: card
        type: string
        custom: []
    cleanQueryParameters:
      image_path: uploads/images/2021/09/9762db71-f5a6-41c4-913e-90b8aebad733.jpg
      device_version: card
    bodyParameters:
      image_path:
        name: image_path
        description: ''
        required: true
        example: hic
        type: string
        custom: []
      image_version:
        name: image_version
        description: ''
        required: true
        example: iure
        type: string
        custom: []
    cleanBodyParameters:
      image_path: hic
      image_version: iure
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Eh54dk6PavVaZc18gbDfe63'
    controller: null
    method: null
    route: null
    custom: []
