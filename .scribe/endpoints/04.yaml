name: User
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users/current
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve Auth/Request User'
      description: 'Get currently authenticated user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer g5EkVeP6Z4ba1Dd8ac3hv6f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{user_ref}/update-password'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Password'
      description: 'A user can update their password.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      user_ref:
        name: user_ref
        description: ''
        required: true
        example: 975dcf22-21a8-406a-9a83-6b943cea0508
        type: string
        custom: []
      user:
        name: user
        description: "Specifies user's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      user_ref: 975dcf22-21a8-406a-9a83-6b943cea0508
      user: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      old_password:
        name: old_password
        description: "Specifies user's current password."
        required: true
        example: oldPASSword12@
        type: string
        custom: []
      new_password:
        name: new_password
        description: "Specifies user's proposed password."
        required: true
        example: newPASSword123@
        type: string
        custom: []
    cleanBodyParameters:
      old_password: oldPASSword12@
      new_password: newPASSword123@
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z5aDkv6gcP8hVE3af6d14be'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/portal/users/{user}/settings'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Settings'
      description: 'Get settings information for a user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      user:
        name: user
        description: "Specifies user's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      user: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dZakgEDV4h81cPe6fv35b6a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/portal/users/{user_ref}/update-personal-info'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Personal Info'
      description: "Allows User/Admin to Update their/user's personal info."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      user_ref:
        name: user_ref
        description: ''
        required: true
        example: 975dcf22-21a8-406a-9a83-6b943cea0508
        type: string
        custom: []
      user:
        name: user
        description: "Specifies user's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      user_ref: 975dcf22-21a8-406a-9a83-6b943cea0508
      user: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'The first name of the user.'
        required: true
        example: Wendy
        type: string
        custom: []
      last_name:
        name: last_name
        description: 'The last name of the user.'
        required: true
        example: Mike
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the User.'
        required: true
        example: user@email.com
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone number of the User.'
        required: true
        example: '+12333333333'
        type: string
        custom: []
      gender:
        name: gender
        description: 'The gender of the User.'
        required: false
        example: female
        type: string
        custom: []
      dob:
        name: dob
        description: 'The date of birth of the User.'
        required: false
        example: '2000-12-31'
        type: date
        custom: []
      country:
        name: country
        description: "The user's country of residence."
        required: false
        example: Nigeria
        type: string
        custom: []
      state:
        name: state
        description: "The user's state of residence."
        required: false
        example: Lagos
        type: string
        custom: []
      city:
        name: city
        description: "The user's city of residence."
        required: false
        example: Ikeja
        type: string
        custom: []
      postcode:
        name: postcode
        description: "The user's postcode."
        required: false
        example: '100271'
        type: string
        custom: []
      address:
        name: address
        description: "The user's address."
        required: false
        example: '1, Lagos Road, Ikeja'
        type: string
        custom: []
      nationality:
        name: nationality
        description: "The user's nationality."
        required: false
        example: British
        type: string
        custom: []
      occupation:
        name: occupation
        description: "The user's occupation."
        required: false
        example: Engineering
        type: string
        custom: []
      passport_number:
        name: passport_number
        description: "The user's passport number."
        required: false
        example: '12347474686'
        type: string
        custom: []
      bio:
        name: bio
        description: ''
        required: false
        example: non
        type: string
        custom: []
      tshirt_size:
        name: tshirt_size
        description: "The user's tshirt size."
        required: false
        example: xl
        type: string
        custom: []
      emergency_contact_name:
        name: emergency_contact_name
        description: "The user's emergency contact's name."
        required: false
        example: 'Peter Parker'
        type: string
        custom: []
      emergency_contact_phone:
        name: emergency_contact_phone
        description: "The user's emergency contact's phone number."
        required: false
        example: '09012345678'
        type: string
        custom: []
    cleanBodyParameters:
      first_name: Wendy
      last_name: Mike
      email: user@email.com
      phone: '+12333333333'
      gender: female
      dob: '2000-12-31'
      country: Nigeria
      state: Lagos
      city: Ikeja
      postcode: '100271'
      address: '1, Lagos Road, Ikeja'
      nationality: British
      occupation: Engineering
      passport_number: '12347474686'
      bio: non
      tshirt_size: xl
      emergency_contact_name: 'Peter Parker'
      emergency_contact_phone: '09012345678'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PgaavdVh48Z53Dcfb6eE16k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/portal/users/{user_ref}/update-socials'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Socials
      description: "Allows User/Admin to Update their/user's socials info."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      user_ref:
        name: user_ref
        description: ''
        required: true
        example: 975dcf22-21a8-406a-9a83-6b943cea0508
        type: string
        custom: []
      user:
        name: user
        description: "Specifies user's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      user_ref: 975dcf22-21a8-406a-9a83-6b943cea0508
      user: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      socials:
        name: socials
        description: 'Associative array of key-value pairs of platform and url.'
        required: false
        example:
          -
            platform: facebook
            url: 'https://facebook.com/me'
        type: 'string[]'
        custom: []
      'socials[].platform':
        name: 'socials[].platform'
        description: 'Must be one of <code>google</code>, <code>facebook</code>, <code>twitter</code>, <code>instagram</code>, <code>tiktok</code>, <code>linkedin</code>, <code>youtube</code>, <code>vimeo</code>, or <code>github</code>.'
        required: false
        example: tiktok
        type: string
        custom: []
      'socials[].url':
        name: 'socials[].url'
        description: 'Must be a valid URL.'
        required: false
        example: 'http://www.kemmer.info/aut-ea-voluptatum-dolor-enim-amet-rem-est'
        type: string
        custom: []
    cleanBodyParameters:
      socials:
        -
          platform: facebook
          url: 'https://facebook.com/me'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6c5aa6e1bE84VhZdfvDgP3k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/portal/users/{user_ref}/delete-socials'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove Socials'
      description: 'Allows Deletion of socials info.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      user_ref:
        name: user_ref
        description: ''
        required: true
        example: 975dcf22-21a8-406a-9a83-6b943cea0508
        type: string
        custom: []
      user:
        name: user
        description: "Specifies user's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      user_ref: 975dcf22-21a8-406a-9a83-6b943cea0508
      user: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      platform:
        name: platform
        description: 'The platform for the socials record to be deleted.'
        required: false
        example: facebook
        type: string
        custom: []
    cleanBodyParameters:
      platform: facebook
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b8vg6VcEh5Dk4eZ3f1aP6da'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/portal/users/{user_ref}/switch-active-role'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Set/Switch Active Role'
      description: 'Admin can switch between their assigned roles.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      user_ref:
        name: user_ref
        description: ''
        required: true
        example: 975dcf22-21a8-406a-9a83-6b943cea0508
        type: string
        custom: []
      user:
        name: user
        description: "Specifies user's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      user_ref: 975dcf22-21a8-406a-9a83-6b943cea0508
      user: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      role:
        name: role
        description: 'Specifies the name attribute of the new role to be assigned as active role.'
        required: true
        example: participant
        type: string
        custom: []
    cleanBodyParameters:
      role: participant
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1afE56V4DcaZ8h6dvPekg3b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/users/cards
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Payment Cards'
      description: "Payment cards added to user's account user."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5cPvah6Eg4138fbZ6DaedVk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/portal/users/{user_ref}/add-card'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add Payment Card'
      description: 'Add a payment card to user account.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      user_ref:
        name: user_ref
        description: ''
        required: true
        example: 975dcf22-21a8-406a-9a83-6b943cea0508
        type: string
        custom: []
      user:
        name: user
        description: "Specifies user's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      user_ref: 975dcf22-21a8-406a-9a83-6b943cea0508
      user: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      card_name:
        name: card_name
        description: 'The official name on the card.'
        required: true
        example: 'Sara Lulu'
        type: string
        custom: []
      card_number:
        name: card_number
        description: 'The 16 digits number on card.'
        required: true
        example: '1234123412341234'
        type: string
        custom: []
      expiry_date:
        name: expiry_date
        description: 'The expiry date on card (include a default 01 as day).'
        required: true
        example: 01/12/2026
        type: date
        custom: []
    cleanBodyParameters:
      card_name: 'Sara Lulu'
      card_number: '1234123412341234'
      expiry_date: 01/12/2026
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aPk3vbE6D4VcZhae8165gfd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/portal/cards/{card_ref}/remove'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove Payment Card'
      description: 'Delete a payment card from user account.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      card_ref:
        name: card_ref
        description: ''
        required: true
        example: 97682ea4-7e58-4984-983e-680b664af0ec
        type: string
        custom: []
      card:
        name: card
        description: "Specifies card's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      card_ref: 97682ea4-7e58-4984-983e-680b664af0ec
      card: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6fEg84achDa6Vdb5ke13ZPv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/users
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Users' Listing"
      description: "Get paginated application users' list."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      deleted:
        name: deleted
        description: 'Specifying how to interact with soft-deleted items.'
        required: false
        example: with
        type: string
        custom: []
      role:
        name: role
        description: 'Specifying the user role to query by.'
        required: false
        example: administrator
        type: string
        custom: []
      term:
        name: term
        description: 'Specifying a keyword similar to first_name, last_name, phone, or email.'
        required: false
        example: john@email
        type: string
        custom: []
      per_page:
        name: per_page
        description: 'Overriding the default (10) number of listings per-page.'
        required: false
        example: '20'
        type: string
        custom: []
      order_by:
        name: order_by
        description: 'Specifying method of ordering query. Multiple values can be provided by listing items separated by comma.'
        required: false
        example: 'first_name:desc,last_name:asc,full_name:desc'
        type: string
        custom: []
      year:
        name: year
        description: 'Specifying year filter for when user was created.'
        required: false
        example: '2023'
        type: string
        custom: []
      period:
        name: period
        description: 'Specifying a period to filter users creation date by.'
        required: false
        example: 24h
        type: string
        custom: []
      month:
        name: month
        description: 'Specifying a month to filter users creation date by.'
        required: false
        example: '1'
        type: string
        custom: []
      status:
        name: status
        description: 'Specifying user account verification status.'
        required: false
        example: verified
        type: string
        custom: []
    cleanQueryParameters:
      deleted: with
      role: administrator
      term: john@email
      per_page: '20'
      order_by: 'first_name:desc,last_name:asc,full_name:desc'
      year: '2023'
      period: 24h
      month: '1'
      status: verified
    bodyParameters:
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 34
        type: number
        custom: []
      deleted:
        name: deleted
        description: 'Must be one of <code>with</code>, <code>without</code>, or <code>only</code>.'
        required: false
        example: with
        type: string
        custom: []
      order_by:
        name: order_by
        description: ''
        required: false
        example:
          - quas
        type: 'string[]'
        custom: []
      role:
        name: role
        description: 'Must be one of <code>administrator</code>, <code>account_manager</code>, <code>charity</code>, <code>developer</code>, <code>charity_user</code>, <code>partner</code>, <code>participant</code>, <code>event_manager</code>, <code>corporate</code>, <code>runthrough_data</code>, or <code>content_manager</code>.'
        required: false
        example: runthrough_data
        type: string
        custom: []
      term:
        name: term
        description: 'Must not be greater than 50 characters.'
        required: false
        example: wlkxhlwnl
        type: string
        custom: []
      status:
        name: status
        description: 'Must be one of <code>active</code> or <code>restricted</code>.'
        required: false
        example: active
        type: string
        custom: []
      verification:
        name: verification
        description: 'Must be one of <code>verified</code> or <code>unverified</code>.'
        required: false
        example: unverified
        type: string
        custom: []
    cleanBodyParameters:
      per_page: 34
      deleted: with
      order_by:
        - quas
      role: runthrough_data
      term: wlkxhlwnl
      status: active
      verification: unverified
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6bgZvcEVD4a386f1k5ehPda'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/users/create
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve User Options'
      description: 'Fetch available form options'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 463vfgP85ahVEZe61dabcDk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/portal/users/{ref}/show'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve User'
      description: 'Get specific user by their ref attribute.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      ref:
        name: ref
        description: "Specifies user's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      ref: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gba63DkhEV8cd16PvZ54fae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/portal/users/{user_email}/_show'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve User by email address'
      description: 'Get specific user by their email attribute.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      user_email:
        name: user_email
        description: "Specifies user's email attribute."
        required: true
        example: Mark@runforcharity.com
        type: string
        custom: []
    cleanUrlParameters:
      user_email: Mark@runforcharity.com
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eP5f6cD8k3agbh6ZvVE4a1d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/users/export
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Export users'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      deleted:
        name: deleted
        description: 'Specifying how to interact with soft-deleted items.'
        required: false
        example: with
        type: string
        custom: []
      role:
        name: role
        description: 'Specifying the user role to query by.'
        required: false
        example: administrator
        type: string
        custom: []
      term:
        name: term
        description: 'Specifying a keyword similar to first_name, last_name, phone, or email.'
        required: false
        example: john@email
        type: string
        custom: []
      per_page:
        name: per_page
        description: 'Overriding the default (10) number of listings per-page.'
        required: false
        example: '20'
        type: string
        custom: []
      order_by:
        name: order_by
        description: 'Specifying method of ordering query. Multiple values can be provided by listing items separated by comma.'
        required: false
        example: 'first_name:desc,last_name:asc,full_name:desc'
        type: string
        custom: []
      year:
        name: year
        description: 'Specifying year filter for when user was created.'
        required: false
        example: '2023'
        type: string
        custom: []
      period:
        name: period
        description: 'Specifying a period to filter users creation date by.'
        required: false
        example: 24h
        type: string
        custom: []
      month:
        name: month
        description: 'Specifying a month to filter users creation date by.'
        required: false
        example: '1'
        type: string
        custom: []
      status:
        name: status
        description: 'Specifying user status.'
        required: false
        example: active
        type: string
        custom: []
    cleanQueryParameters:
      deleted: with
      role: administrator
      term: john@email
      per_page: '20'
      order_by: 'first_name:desc,last_name:asc,full_name:desc'
      year: '2023'
      period: 24h
      month: '1'
      status: active
    bodyParameters:
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 64
        type: number
        custom: []
      deleted:
        name: deleted
        description: 'Must be one of <code>with</code>, <code>without</code>, or <code>only</code>.'
        required: false
        example: with
        type: string
        custom: []
      order_by:
        name: order_by
        description: ''
        required: false
        example:
          - beatae
        type: 'string[]'
        custom: []
      role:
        name: role
        description: 'Must be one of <code>administrator</code>, <code>account_manager</code>, <code>charity</code>, <code>developer</code>, <code>charity_user</code>, <code>partner</code>, <code>participant</code>, <code>event_manager</code>, <code>corporate</code>, <code>runthrough_data</code>, or <code>content_manager</code>.'
        required: false
        example: content_manager
        type: string
        custom: []
      term:
        name: term
        description: 'Must not be greater than 50 characters.'
        required: false
        example: q
        type: string
        custom: []
      status:
        name: status
        description: 'Must be one of <code>active</code> or <code>restricted</code>.'
        required: false
        example: active
        type: string
        custom: []
      verification:
        name: verification
        description: 'Must be one of <code>verified</code> or <code>unverified</code>.'
        required: false
        example: unverified
        type: string
        custom: []
    cleanBodyParameters:
      per_page: 64
      deleted: with
      order_by:
        - beatae
      role: content_manager
      term: q
      status: active
      verification: unverified
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ebfv5c4ZdkDeP16aa6ghV83'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/portal/users/{ref}/edit'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Edit User'
      description: "Show specific user's account information for editing."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      ref:
        name: ref
        description: "Specifies user's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      ref: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cb35df16ek6va8EP4ZaDVgh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/portal/users/{user_ref}/admin-login-as'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Admin can log in as a user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      user_ref:
        name: user_ref
        description: ''
        required: true
        example: 975dcf22-21a8-406a-9a83-6b943cea0508
        type: string
        custom: []
      user:
        name: user
        description: "Specifies user's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      user_ref: 975dcf22-21a8-406a-9a83-6b943cea0508
      user: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3Zc4DbkE68gh6vdeaf1PVa5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/portal/users/store
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create User'
      description: 'Create a user account.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'The first name of the user.'
        required: true
        example: Wendy
        type: string
        custom: []
      last_name:
        name: last_name
        description: 'The last name of the user.'
        required: true
        example: Mike
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the User.'
        required: true
        example: user@email.com
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone number of the User.'
        required: true
        example: '+12333333333'
        type: string
        custom: []
      gender:
        name: gender
        description: 'The gender of the User.'
        required: true
        example: female
        type: string
        custom: []
      dob:
        name: dob
        description: 'The password of the User.'
        required: true
        example: '2000-12-31'
        type: date
        custom: []
      roles:
        name: roles
        description: 'The role to be assigned to specified User.'
        required: true
        example:
          - administrator
          - developer
        type: 'string[]'
        custom: []
      avatar:
        name: avatar
        description: 'The image.'
        required: false
        example: null
        type: file
        custom: []
    cleanBodyParameters:
      first_name: Wendy
      last_name: Mike
      email: user@email.com
      phone: '+12333333333'
      gender: female
      dob: '2000-12-31'
      roles:
        - administrator
        - developer
    fileParameters:
      avatar: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 86VZdfegkhEa645v1cabPD3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/portal/users/{user_ref}/update'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User'
      description: 'Update edited user account information.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      user_ref:
        name: user_ref
        description: ''
        required: true
        example: 975dcf22-21a8-406a-9a83-6b943cea0508
        type: string
        custom: []
      user:
        name: user
        description: "Specifies user's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      user_ref: 975dcf22-21a8-406a-9a83-6b943cea0508
      user: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'The first name of the user.'
        required: true
        example: Wendy
        type: string
        custom: []
      last_name:
        name: last_name
        description: 'The last name of the user.'
        required: true
        example: Mike
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the User.'
        required: true
        example: user@email.com
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone number of the User.'
        required: true
        example: '+12333333333'
        type: string
        custom: []
      gender:
        name: gender
        description: 'The gender of the User.'
        required: true
        example: female
        type: string
        custom: []
      dob:
        name: dob
        description: 'The date of birth of the User.'
        required: true
        example: '2000-12-31'
        type: date
        custom: []
      roles:
        name: roles
        description: 'The role to be assigned to specified User.'
        required: true
        example:
          - administrator
          - developer
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      first_name: Wendy
      last_name: Mike
      email: user@email.com
      phone: '+12333333333'
      gender: female
      dob: '2000-12-31'
      roles:
        - administrator
        - developer
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b1ae3hDV5P86gEfkc4dva6Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/portal/users/{user_ref}/update-roles'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Role'
      description: 'Update Role assigned to User.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      user_ref:
        name: user_ref
        description: ''
        required: true
        example: 975dcf22-21a8-406a-9a83-6b943cea0508
        type: string
        custom: []
      user:
        name: user
        description: "Specifies user's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      user_ref: 975dcf22-21a8-406a-9a83-6b943cea0508
      user: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      roles:
        name: roles
        description: 'The role to be assigned to specified User.'
        required: true
        example:
          - administrator
          - developer
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      roles:
        - administrator
        - developer
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6e1vbPEaVZ3ag8Dfh5kdc46'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/v1/portal/users/add-to-site
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add Many Users to Site'
      description: 'Add multiple users to current site by specifying their ids.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      users_ids:
        name: users_ids
        description: 'The list of ids associated with users.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      users_ids:
        - 1
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v6hEZ1aaV58degfP6D3kb4c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/v1/portal/users/remove-from-site
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove User from Site'
      description: 'Multi-remove user(s) from site.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      force:
        name: force
        description: 'Optional parameter to indicate that user record should be deleted permanently.'
        required: false
        example: '1'
        type: string
        custom: []
    cleanQueryParameters:
      force: '1'
    bodyParameters:
      users_ids:
        name: users_ids
        description: 'The list of ids associated with specific users.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      users_ids:
        - 1
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6hkdv3EagP6548Vabfc1ZeD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/v1/portal/users/delete
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Many Users'
      description: "Delete multiple users' data by specifying their ids."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      force:
        name: force
        description: 'Optionally specifying to force-delete model, instead of the default soft-delete.'
        required: false
        example: '1'
        type: string
        custom: []
    cleanQueryParameters:
      force: '1'
    bodyParameters:
      users_ids:
        name: users_ids
        description: 'The list of ids associated with users.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      users_ids:
        - 1
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gf3bVZPD6k6av5Ehac84e1d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/v1/portal/users/restore
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore Many Users'
      description: 'Restore multiple users data by specifying their ids.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      users_ids:
        name: users_ids
        description: 'The list of ids associated with users.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      users_ids:
        - 1
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EVfa864cZgv1k6a5eDhPdb3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/v1/portal/users/take-action
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Site Users Action'
      description: 'Take an action by specifying their ids and the action.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      users_ids:
        name: users_ids
        description: 'The list of ids associated with users.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
      action:
        name: action
        description: 'The reason for restricting the user.'
        required: true
        example: restrict
        type: string
        custom: []
    cleanBodyParameters:
      users_ids:
        - 1
        - 2
      action: restrict
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3beghEvPD84VZ6k1a65dfca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/portal/users/{user_ref}/grant-permission'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Grant Permission'
      description: 'Admin grant permission to user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      user_ref:
        name: user_ref
        description: ''
        required: true
        example: 975dcf22-21a8-406a-9a83-6b943cea0508
        type: string
        custom: []
      user:
        name: user
        description: "Specifies user's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      user_ref: 975dcf22-21a8-406a-9a83-6b943cea0508
      user: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      permission_name:
        name: permission_name
        description: "Specifies permission's name attribute."
        required: true
        example: suspend-users
        type: string
        custom: []
    cleanBodyParameters:
      permission_name: suspend-users
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer adv36kPhg5E1fDeZV8b6ac4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/portal/users/{user_ref}/revoke-permission'
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Revoke Permission'
      description: 'Admin can revoke a user permission.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      user_ref:
        name: user_ref
        description: ''
        required: true
        example: 975dcf22-21a8-406a-9a83-6b943cea0508
        type: string
        custom: []
      user:
        name: user
        description: "Specifies user's ref attribute."
        required: true
        example: 975dcf12-eda2-4437-8c96-6df4e790d074
        type: string
        custom: []
    cleanUrlParameters:
      user_ref: 975dcf22-21a8-406a-9a83-6b943cea0508
      user: 975dcf12-eda2-4437-8c96-6df4e790d074
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      permission_name:
        name: permission_name
        description: ''
        required: true
        example: eligendi
        type: string
        custom: []
    cleanBodyParameters:
      permission_name: eligendi
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4hvVg6d81ab3kZ5fePcEaD6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/v1/portal/users/assign-multi-roles
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Multi Assign Roles'
      description: 'Admin can assign multiple users to multiple roles.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      roles:
        name: roles
        description: 'This is an array specifying the ids of roles to be assigned.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
      users:
        name: users
        description: 'This is an array specifying the ids of users to be assigned.'
        required: true
        example:
          - 4
          - 2
          - 3
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      roles:
        - 1
        - 2
      users:
        - 4
        - 2
        - 3
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k3aP6fbgV6acZE4evD8hd51'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/v1/portal/users/assign-multi-permissions
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Multi Assign Permissions'
      description: 'Admin can grant multiple users multiple permissions.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      permissions:
        name: permissions
        description: 'This is an array specifying the ids of permissions to be assigned.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
      users:
        name: users
        description: 'This is an array specifying the ids of users to be assigned.'
        required: true
        example:
          - 4
          - 2
          - 3
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      permissions:
        - 1
        - 2
      users:
        - 4
        - 2
        - 3
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e8aPahgcEfb16d5V6D3k4vZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/users/stats/summary
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Users Roles Stats'
      description: 'Get User Role Stats.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      role:
        name: role
        description: 'Specifying the user role to query by.'
        required: false
        example: administrator
        type: string
        custom: []
      year:
        name: year
        description: 'Specifying method of filtering query by registration year.'
        required: false
        example: '2022'
        type: string
        custom: []
      period:
        name: period
        description: 'Specifying method of filtering query by time period.'
        required: false
        example: 24h
        type: string
        custom: []
    cleanQueryParameters:
      role: administrator
      year: '2022'
      period: 24h
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E58hg36VveZ14kPadcfabD6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/users/stats/chart
    metadata:
      groupName: User
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Users Registration Stats'
      description: 'Get User Registration Chart data.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      role:
        name: role
        description: 'Specifying the user role to query by.'
        required: false
        example: administrator
        type: string
        custom: []
      year:
        name: year
        description: 'Specifying method of filtering query by registration year.'
        required: false
        example: '2022'
        type: string
        custom: []
      period:
        name: period
        description: 'Specifying method of filtering query by time period.'
        required: false
        example: 24h
        type: string
        custom: []
    cleanQueryParameters:
      role: administrator
      year: '2022'
      period: 24h
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 85vcfPDVdE1aZ36g46abkeh'
    controller: null
    method: null
    route: null
    custom: []
