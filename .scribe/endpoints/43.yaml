name: Series
description: |-

  Manages series.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/portal/series
    metadata:
      groupName: Series
      groupDescription: |-

        Manages series.
      subgroup: ''
      subgroupDescription: ''
      title: 'The list of series.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      drafted:
        name: drafted
        description: 'Specifying how to interact with drafted items.'
        required: false
        example: with
        type: string
        custom: []
      deleted:
        name: deleted
        description: 'Specifying how to interact with soft-deleted items.'
        required: false
        example: with
        type: string
        custom: []
      term:
        name: term
        description: 'Filter by term. The term to search for.'
        required: false
        example: null
        type: string
        custom: []
      page:
        name: page
        description: 'The page data to return'
        required: false
        example: 1
        type: integer
        custom: []
      per_page:
        name: per_page
        description: 'Items per page'
        required: false
        example: null
        type: integer
        custom: []
      order_by:
        name: order_by
        description: 'Specifying method of ordering query. Multiple values can be provided by listing items separated by comma.'
        required: false
        example: 'name:desc,created_at:desc'
        type: string
        custom: []
    cleanQueryParameters:
      drafted: with
      deleted: with
      page: 1
      order_by: 'name:desc,created_at:desc'
    bodyParameters:
      term:
        name: term
        description: ''
        required: false
        example: voluptas
        type: string
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 21
        type: integer
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 53
        type: integer
        custom: []
      drafted:
        name: drafted
        description: 'Must be one of <code>with</code>, <code>without</code>, or <code>only</code>.'
        required: false
        example: with
        type: string
        custom: []
      deleted:
        name: deleted
        description: 'Must be one of <code>with</code>, <code>without</code>, or <code>only</code>.'
        required: false
        example: without
        type: string
        custom: []
      order_by:
        name: order_by
        description: ''
        required: false
        example:
          - sint
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      term: voluptas
      page: 21
      per_page: 53
      drafted: with
      deleted: without
      order_by:
        - sint
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer edEagbVZPh84fa36cv516kD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/series/all
    metadata:
      groupName: Series
      groupDescription: |-

        Manages series.
      subgroup: ''
      subgroupDescription: ''
      title: 'Paginated series for dropdown fields.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      term:
        name: term
        description: 'Filter by term. The term to search for.'
        required: false
        example: null
        type: string
        custom: []
      page:
        name: page
        description: 'The page data to return'
        required: false
        example: 1
        type: integer
        custom: []
      per_page:
        name: per_page
        description: 'Items per page'
        required: false
        example: null
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters:
      term:
        name: term
        description: ''
        required: false
        example: sapiente
        type: string
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 23
        type: integer
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 81
        type: integer
        custom: []
    cleanBodyParameters:
      term: sapiente
      page: 23
      per_page: 81
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h1Dc3v5V668kaPgbZeEf4ad'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/series/create
    metadata:
      groupName: Series
      groupDescription: |-

        Manages series.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a serie.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6E6Pkfh4Z3va5cd1aVg8beD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/portal/series/create
    metadata:
      groupName: Series
      groupDescription: |-

        Manages series.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a serie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the serie. This field is required when <code>site_id</code> is present.'
        required: false
        example: Run
        type: string
        custom: []
      site_id:
        name: site_id
        description: 'The site id.'
        required: true
        example: 1
        type: integer
        custom: []
      description:
        name: description
        description: 'The description of the serie.'
        required: false
        example: 'Serie description'
        type: string
        custom: []
      is_draft:
        name: is_draft
        description: 'save the new entity as a draft or not.'
        required: false
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      name: Run
      site_id: 1
      description: 'Serie description'
      is_draft: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aaev18P6Dfk56bVE3dgch4Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/portal/series/{ref}/details'
    metadata:
      groupName: Series
      groupDescription: |-

        Manages series.
      subgroup: ''
      subgroupDescription: ''
      title: 'Serie details.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      ref:
        name: ref
        description: ''
        required: true
        example: nemo
        type: string
        custom: []
      serie_ref:
        name: serie_ref
        description: 'The ref of the serie.'
        required: true
        example: 97ad9df6-bc08-4729-b95e-3671dc6192c2
        type: string
        custom: []
    cleanUrlParameters:
      ref: nemo
      serie_ref: 97ad9df6-bc08-4729-b95e-3671dc6192c2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f63adVc4EDva8PZe56kg1hb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/portal/series/{ref}/edit'
    metadata:
      groupName: Series
      groupDescription: |-

        Manages series.
      subgroup: ''
      subgroupDescription: ''
      title: 'Edit a serie.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      ref:
        name: ref
        description: ''
        required: true
        example: autem
        type: string
        custom: []
      serie_ref:
        name: serie_ref
        description: 'The ref of the serie.'
        required: true
        example: 97ad9df6-bc08-4729-b95e-3671dc6192c2
        type: string
        custom: []
    cleanUrlParameters:
      ref: autem
      serie_ref: 97ad9df6-bc08-4729-b95e-3671dc6192c2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5v46kP1Z8gEaDeabdVh6fc3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/series/export
    metadata:
      groupName: Series
      groupDescription: |-

        Manages series.
      subgroup: ''
      subgroupDescription: ''
      title: 'Export Series'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      deleted:
        name: deleted
        description: 'Specifying how to interact with soft-deleted items.'
        required: false
        example: with
        type: string
        custom: []
      term:
        name: term
        description: 'Filter by term. The term to search for.'
        required: false
        example: null
        type: string
        custom: []
      order_by:
        name: order_by
        description: 'Specifying method of ordering query. Multiple values can be provided by listing items separated by comma.'
        required: false
        example: 'name:desc,created_at:desc'
        type: string
        custom: []
    cleanQueryParameters:
      deleted: with
      order_by: 'name:desc,created_at:desc'
    bodyParameters:
      term:
        name: term
        description: ''
        required: false
        example: error
        type: string
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 88
        type: integer
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1.'
        required: false
        example: 60
        type: integer
        custom: []
      drafted:
        name: drafted
        description: 'Must be one of <code>with</code>, <code>without</code>, or <code>only</code>.'
        required: false
        example: only
        type: string
        custom: []
      deleted:
        name: deleted
        description: 'Must be one of <code>with</code>, <code>without</code>, or <code>only</code>.'
        required: false
        example: with
        type: string
        custom: []
      order_by:
        name: order_by
        description: ''
        required: false
        example:
          - eum
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      term: error
      page: 88
      per_page: 60
      drafted: only
      deleted: with
      order_by:
        - eum
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bhdE6834vZaP5a6eVf1Dckg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/portal/series/{ref}/update'
    metadata:
      groupName: Series
      groupDescription: |-

        Manages series.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update serie'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters:
      ref:
        name: ref
        description: ''
        required: true
        example: corrupti
        type: string
        custom: []
    cleanUrlParameters:
      ref: corrupti
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      site_id:
        name: site_id
        description: 'The site id. This field is required when <code>name</code> is present.'
        required: false
        example: 1
        type: integer
        custom: []
      name:
        name: name
        description: 'The name of the serie. This field is required when <code>site_id</code> is present.'
        required: false
        example: Run
        type: string
        custom: []
      description:
        name: description
        description: 'The description of the serie.'
        required: false
        example: 'Serie description'
        type: string
        custom: []
    cleanBodyParameters:
      site_id: 1
      name: Run
      description: 'Serie description'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer va8dfh6ZDV64acbgE31Pe5k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/portal/series/draft
    metadata:
      groupName: Series
      groupDescription: |-

        Manages series.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark as draft one or many series'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'An array list of ids associated with series.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      ids:
        - 1
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ka8vdD15Ph43bVa6EcegZf6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/portal/series/publish
    metadata:
      groupName: Series
      groupDescription: |-

        Manages series.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark as published one or many series'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'An array list of ids associated with series.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      ids:
        - 1
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DEbha6fk4ZP85e6Vgad31cv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/v1/portal/series/delete
    metadata:
      groupName: Series
      groupDescription: |-

        Manages series.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete one or many series'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'An array list of ids associated with series.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      ids:
        - 1
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8baa5ZPcheDk4gv6V1Efd63'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/portal/series/restore
    metadata:
      groupName: Series
      groupDescription: |-

        Manages series.
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore one or many series'
      description: 'bodyParam ids string[] required An array list of ids associated with series. Example: [1,2]'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: ''
        required: false
        example:
          - 14.0
        type: 'number[]'
        custom: []
    cleanBodyParameters:
      ids:
        - 14.0
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Efc1ZdeDP56ga8kb3Va4v6h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/v1/portal/series/delete/force
    metadata:
      groupName: Series
      groupDescription: |-

        Manages series.
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Delete one or many series permanently
        Only the administrator can delete a serie permanently.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'An array list of ids associated with series.'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      ids:
        - 1
        - 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer abahVDkeP663541d8ZcvEgf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/portal/series/stats/summary
    metadata:
      groupName: Series
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Serie Stats'
      description: 'Get Serie Stats Summary.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
      X-Client-Key: 15efff517947ca8fbf0e87ffafcd6e9c8e778415dfe60f4e570ecbdf76e8ebc0
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      year:
        name: year
        description: 'Specifying method of filtering query by year.'
        required: false
        example: '2022'
        type: string
        custom: []
      period:
        name: period
        description: 'Specifying method of filtering query by time period.'
        required: false
        example: 24h
        type: string
        custom: []
    cleanQueryParameters:
      year: '2022'
      period: 24h
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 38Zf6e1bdgh4cav56PkaEDV'
    controller: null
    method: null
    route: null
    custom: []
